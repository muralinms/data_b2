
JE@DESKTOP-NHDPLMV MINGW64 ~
$ git config
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <type>     value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


JE@DESKTOP-NHDPLMV MINGW64 ~
$ git init
Initialized empty Git repository in C:/Users/JE/.git/

JE@DESKTOP-NHDPLMV MINGW64 ~ (master)
$ git clone ^[[200~https://github.com/muralinms/GCP_Murali.git~
Cloning into 'GCP_Murali.git~'...
fatal: protocol '?[200~https' is not supported

JE@DESKTOP-NHDPLMV MINGW64 ~ (master)
$ git clone https://github.com/muralinms/GCP_Murali.git
Cloning into 'GCP_Murali'...
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Receiving objects: 100% (3/3), done.

JE@DESKTOP-NHDPLMV MINGW64 ~ (master)
$ cd GCP_Murali

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ cd ..

JE@DESKTOP-NHDPLMV MINGW64 ~ (master)
$ cd GCP_Murali

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ ls
README.md

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ touch batch2.txt

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ ls
README.md  batch2.txt

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ cat >> b2.txt
My data is herre
JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ ls
README.md  b2.txt  batch2.txt

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ cat readme.md
# GCP_Murali
JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ nano b1.txt

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ cat b1.txt
Srihari is a very intiligent

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ get add *
bash: get: command not found

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ git add *
warning: in the working copy of 'b1.txt', LF will be replaced by CRLF the next time Git touches it

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   b1.txt
        new file:   b2.txt
        new file:   batch2.txt


JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ git commit -m "Files b1,b2 and Batch2 are added to git"
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'JE@DESKTOP-NHDPLMV.(none)')

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ git config --global user.email "muralisfdc1979@gmail.com"

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ git config --global user.name "GCP_Murali"

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ git commit -m "Files are addted to  git"
[main a0ddcec] Files are addted to  git
 3 files changed, 2 insertions(+)
 create mode 100644 b1.txt
 create mode 100644 b2.txt
 create mode 100644 batch2.txt

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ git pull
Already up to date.

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ git push -u origin main
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (5/5), 410 bytes | 205.00 KiB/s, done.
Total 5 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/muralinms/GCP_Murali.git
   be393d0..a0ddcec  main -> main
branch 'main' set up to track 'origin/main'.

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$ git pull
Already up to date.

JE@DESKTOP-NHDPLMV MINGW64 ~/GCP_Murali (main)
$
